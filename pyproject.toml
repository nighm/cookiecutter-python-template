# Poetry 项目配置文件
[tool.poetry]
name = "cookiecutter-python-template"  # 项目名称
version = "0.2.1"  # 项目版本
description = "A production-ready Python project template with comprehensive code quality tools"  # 项目描述
authors = ["Your Name <your.email@example.com>"]  # 作者信息
readme = "README.md"  # README文件路径
packages = [{include = "src"}]  # 包含的源代码目录

# 项目依赖配置
[tool.poetry.dependencies]
python = ">=3.11.0,<3.12.0"  # Python版本要求
pydantic = "^2.6.3"  # 数据验证库（最新稳定版）
python-dotenv = "^1.0.1"  # 环境变量管理（最新稳定版）
structlog = "^24.1.0"  # 结构化日志（最新稳定版）
# 数据库支持
sqlalchemy = "^2.0.27"  # SQL ORM（最新稳定版）
psycopg2 = { version = "^2.9.9", optional = true }  # PostgreSQL驱动（最新稳定版）

# 开发依赖配置
[tool.poetry.group.dev.dependencies]
# 代码质量工具
black = "^24.2.0"  # 代码格式化（最新稳定版）
isort = "^5.13.2"  # 导入排序（最新稳定版）
ruff = "^0.3.0"  # 代码分析（最新稳定版）
mypy = "^1.8.0"  # 类型检查（最新稳定版）
bandit = "^1.7.7"  # 安全检查（最新稳定版）

# 测试工具
pytest = "^8.0.1"  # 测试框架（最新稳定版）
pytest-cov = "^4.1.0"  # 测试覆盖率（最新稳定版）
pytest-asyncio = "^0.23.5"  # 异步测试支持（最新稳定版）

# 文档工具
sphinx = "^7.2.6"  # 文档生成（最新稳定版）
sphinx-rtd-theme = "^2.0.0"  # Sphinx主题（最新稳定版）

# 开发工具
pre-commit = "^3.6.2"  # Git提交钩子（最新稳定版）

# 构建系统配置
[build-system]
requires = ["poetry-core>=1.9.0"]  # 构建依赖（最新稳定版）
build-backend = "poetry.core.masonry.api"  # 构建后端

# Black代码格式化配置
[tool.black]
line-length = 88  # 行长度限制
target-version = ['py311']  # 更新为 Python 3.11
include = '\.pyi?$'  # 包含的文件类型

# isort导入排序配置
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy类型检查配置
[tool.mypy]
python_version = "3.11"  # 更新为 Python 3.11
warn_return_any = true  # 警告返回Any类型
warn_unused_configs = true  # 警告未使用的配置
disallow_untyped_defs = true  # 禁止未类型化的定义
check_untyped_defs = true  # 检查未类型化的定义

# Pytest测试配置
[tool.pytest.ini_options]
testpaths = ["tests"]  # 测试文件路径
python_files = ["test_*.py"]  # 测试文件模式
python_classes = ["Test*"]  # 测试类模式
python_functions = ["test_*"]  # 测试函数模式
addopts = "-v --cov=src --cov-report=html"  # 测试选项
asyncio_mode = "auto"  # 异步模式配置

# Ruff代码分析配置
[tool.ruff]
target-version = "py311"  # Python版本
line-length = 88  # 与black保持一致
select = [
    "E",  # pycodestyle 错误
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "I",  # isort
    "C",  # mccabe & flake8-comprehensions
    "N",  # pep8-naming
]
